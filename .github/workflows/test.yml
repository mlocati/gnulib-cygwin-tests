name: Test

on:
  pull_request:
    paths:
      - .github/workflows/test.yml
      - test/**
  push:
    branches:
      - main
    tags-ignore:
      - "**"
    paths:
      - .github/workflows/test.yml
      - test/**
  workflow_dispatch:

jobs:
  exe:
    name: Test with ${{ matrix.bits}} bits
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        bits:
          - 32
          - 64
    env:
      CYGWIN_NOWINPATH: 1
      CHERE_INVOKING: 1
    defaults:
      run:
        shell: C:\cygwin\bin\bash.exe --login -e {0}
    steps:
      -
        name: Configure git
        shell: cmd
        run: git config --global core.autocrlf input
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Restore cache
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          key: ${{ matrix.bits }}-bits
          path: |
            C:\cygwin-packages
      -
        name: Set variables
        id: vars
        shell: pwsh
        run: ./test/vars.ps1 -Bits ${{ matrix.bits }}
      -
        name: Download Cygwin installer
        shell: pwsh
        run: Invoke-WebRequest -Uri https://cygwin.com/setup-x86_64.exe -OutFile C:\CygwinInstaller.exe
      -
        name: Install Cygwin
        shell: cmd
        run: >
          C:\CygwinInstaller.exe
          --root C:\cygwin
          --local-package-dir C:\cygwin-packages
          --packages ${{ steps.vars.outputs.cygwin-packages }}
          --site http://mirrors.kernel.org/sourceware/cygwin/
          --only-site
          --quiet-mode
          --upgrade-also
          --no-shortcuts
          --no-admin
      -
        name: Setup Cygwin environment
        id: setup-cygwin
        working-directory: C:\cygwin
        run: >-
          printf '\nPATH=${{ steps.vars.outputs.cygwin-path }}\nexport PATH\n' >>$HOME/.bash_profile
          && /bin/mkdir -p "$HOME"
      -
        name: Test required commands
        run: >-
          for checkme in
          awk
          basename
          bison
          cat
          chgrp
          chmod
          chown
          cmp
          cp
          dd
          diff
          echo
          expand
          expr
          false
          gettext
          gperf
          grep
          hostname
          info
          install
          join
          kill
          libtool
          ln
          ls
          make
          md5sum
          mkdir
          mkfifo
          mknod
          mv
          patch
          printenv
          pwd
          python3
          rm
          rmdir
          sed
          sleep
          sort
          tar
          tee
          test
          touch
          true
          uname
          ; do printf "$checkme... "; if which $checkme >/dev/null; then echo 'ok'; else exit 1; fi done
      -
        name: Fetch Gnulib
        shell: cmd
        working-directory: C:\cygwin
        run: git clone --depth 1 https://git.savannah.gnu.org/git/gnulib.git gnulib
      -
        name: Create test directory
        working-directory: C:\cygwin\gnulib
        run: >-
          CC=${{ steps.vars.outputs.mingw-host }}-gcc
          CXX=${{ steps.vars.outputs.mingw-host }}-g++
          LD=${{ steps.vars.outputs.mingw-host }}-ld
          CPPFLAGS='-I/usr/${{ steps.vars.outputs.mingw-host }}/sys-root/mingw/include'
          LDFLAGS='-L/usr/${{ steps.vars.outputs.mingw-host }}/sys-root/mingw/lib'
          ./gnulib-tool
          --create-testdir
          --dir=testdir-for-mingw
          --single-configure
          --without-privileged-tests
          `./all-modules --for-mingw`
      -
        name: Configure
        id: configure
        working-directory: C:\cygwin\gnulib\testdir-for-mingw
        run: >-
          mkdir build
          && cd build
          && ../configure
          CC=${{ steps.vars.outputs.mingw-host }}-gcc
          CXX=${{ steps.vars.outputs.mingw-host }}-g++
          LD=${{ steps.vars.outputs.mingw-host }}-ld
          CPPFLAGS='-I/usr/${{ steps.vars.outputs.mingw-host }}/sys-root/mingw/include'
          LDFLAGS='-L/usr/${{ steps.vars.outputs.mingw-host }}/sys-root/mingw/lib'
          --host=${{ steps.vars.outputs.mingw-host }}
          --enable-relocatable
          --config-cache
          --disable-dependency-tracking
          --enable-nls
          --disable-rpath
          --disable-acl
          --enable-threads=windows
          --prefix=/installed
      -
        name: Compile
        working-directory: C:\cygwin\gnulib\testdir-for-mingw\build
        run: make --jobs=$(nproc)
      -
        name: Check
        working-directory: C:\cygwin\gnulib\testdir-for-mingw\build
        run: make --jobs=$(nproc) check
      -
        name: Install
        working-directory: C:\cygwin\gnulib\testdir-for-mingw\build
        run: make --jobs=$(nproc) install
      -
        name: Prepare build log
        id: prepare-build-log
        if: (success() || failure()) && (steps.configure.outcome == 'success' || steps.configure.outcome == 'failure')
        run: >-
          mkdir /build-log;
          if [ -d /testdir-for-mingw/build ]; then tar c -J -f /build-log/build.tar.xz /testdir-for-mingw/build; fi;
          if [ -d /installed ]; then tar c -J -f /build-log/installed.tar.xz /installed; fi;
          ls -al /build-log
      -
        name: Upload build log
        if: always() && steps.prepare-build-log.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.bits }}-log
          if-no-files-found: ignore
          retention-days: 7
          include-hidden-files: true
          compression-level: 0
          path: C:\cygwin\build-log
      -
        name: Persist cache
        if: always() && steps.restore-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: ${{ steps.restore-cache.outputs.cache-primary-key }}
          path: |
            C:\cygwin-packages
